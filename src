import sqlite3
import tkinter as tk
from tkinter import messagebox

# Função para conectar ao banco de dados
def connect_db():
    conn = sqlite3.connect('biblioteca.db')
    return conn, conn.cursor()

# Função genérica para adicionar dados
def add_data(table, values, message):
    conn, cursor = connect_db()
    cursor.execute(f'INSERT INTO {table} VALUES (NULL, ?)', values)  # NULL para ID AUTOINCREMENT
    conn.commit()
    conn.close()
    messagebox.showinfo('Sucesso', message)

# Funções para adicionar autor, livro e empréstimo
def add_autor():
    add_data('Autores', (entry_nome_autor.get(), entry_nacionalidade_autor.get()), 'Autor adicionado com sucesso!')
    entry_nome_autor.delete(0, tk.END)
    entry_nacionalidade_autor.delete(0, tk.END)
    view_autores()

def add_livro():
    add_data('Livros', (entry_titulo_livro.get(), entry_ano_livro.get(), entry_genero_livro.get()), 'Livro adicionado com sucesso!')
    entry_titulo_livro.delete(0, tk.END)
    entry_ano_livro.delete(0, tk.END)
    entry_genero_livro.delete(0, tk.END)
    view_livros()

def add_emprestimo():
    add_data('Emprestimos', (entry_data_emp.get(), entry_data_dev.get(), entry_nome_usuario.get()), 'Empréstimo adicionado com sucesso!')
    entry_data_emp.delete(0, tk.END)
    entry_data_dev.delete(0, tk.END)
    entry_nome_usuario.delete(0, tk.END)
    view_emprestimos()

# Função de renovação de empréstimo
def renew_emprestimo():
    livro_id = entry_renovacao_id.get()
    nova_data_dev = entry_nova_data_dev.get()
    
    conn, cursor = connect_db()
    cursor.execute('UPDATE Emprestimos SET DataDevolucao = ? WHERE LivroID = ?', (nova_data_dev, livro_id))
    conn.commit()
    conn.close()
    
    messagebox.showinfo('Sucesso', 'Empréstimo renovado com sucesso!')
    entry_renovacao_id.delete(0, tk.END)
    entry_nova_data_dev.delete(0, tk.END)
    view_emprestimos()

# Função genérica para visualizar dados
def view_data(query, listbox):
    conn, cursor = connect_db()
    cursor.execute(query)
    items = cursor.fetchall()
    conn.close()
    listbox.delete(0, tk.END)
    for item in items:
        listbox.insert(tk.END, item)

# Funções para visualizar autores, livros, empréstimos e atrasos
def view_autores():
    view_data('SELECT * FROM Autores', autores_list)

def view_livros():
    view_data('SELECT * FROM Livros', livros_list)

def view_emprestimos():
    view_data('SELECT * FROM Emprestimos', emprestimos_list)

def view_atrasos():
    view_data('SELECT * FROM Emprestimos WHERE DataDevolucao < date("now")', atrasos_list)

# Interface gráfica com Tkinter
root = tk.Tk()
root.title('Sistema de Biblioteca')

# Frame para adicionar autores
frame_autor = tk.LabelFrame(root, text='Adicionar Autor')
frame_autor.grid(row=0, column=0, padx=10, pady=10)
tk.Label(frame_autor, text='Nome:').grid(row=0, column=0)
entry_nome_autor = tk.Entry(frame_autor)
entry_nome_autor.grid(row=0, column=1)
tk.Label(frame_autor, text='Nacionalidade:').grid(row=1, column=0)
entry_nacionalidade_autor = tk.Entry(frame_autor)
entry_nacionalidade_autor.grid(row=1, column=1)
tk.Button(frame_autor, text='Adicionar Autor', command=add_autor).grid(row=2, columnspan=2, pady=5)

# Frame para adicionar livros
frame_livro = tk.LabelFrame(root, text='Adicionar Livro')
frame_livro.grid(row=1, column=0, padx=10, pady=10)
tk.Label(frame_livro, text='Título:').grid(row=0, column=0)
entry_titulo_livro = tk.Entry(frame_livro)
entry_titulo_livro.grid(row=0, column=1)
tk.Label(frame_livro, text='Ano Publicação:').grid(row=1, column=0)
entry_ano_livro = tk.Entry(frame_livro)
entry_ano_livro.grid(row=1, column=1)
tk.Label(frame_livro, text='Gênero:').grid(row=2, column=0)
entry_genero_livro = tk.Entry(frame_livro)
entry_genero_livro.grid(row=2, column=1)
tk.Button(frame_livro, text='Adicionar Livro', command=add_livro).grid(row=3, columnspan=2, pady=5)

# Frame para adicionar empréstimos
frame_emprestimo = tk.LabelFrame(root, text='Adicionar Empréstimo')
frame_emprestimo.grid(row=2, column=0, padx=10, pady=10)
tk.Label(frame_emprestimo, text='Data Empréstimo:').grid(row=0, column=0)
entry_data_emp = tk.Entry(frame_emprestimo)
entry_data_emp.grid(row=0, column=1)
tk.Label(frame_emprestimo, text='Data Devolução:').grid(row=1, column=0)
entry_data_dev = tk.Entry(frame_emprestimo)
entry_data_dev.grid(row=1, column=1)
tk.Label(frame_emprestimo, text='Nome Usuário:').grid(row=2, column=0)
entry_nome_usuario = tk.Entry(frame_emprestimo)
entry_nome_usuario.grid(row=2, column=1)
tk.Button(frame_emprestimo, text='Adicionar Empréstimo', command=add_emprestimo).grid(row=3, columnspan=2, pady=5)

# Frame para renovar empréstimos
frame_renovacao = tk.LabelFrame(root, text='Renovar Empréstimo')
frame_renovacao.grid(row=3, column=0, padx=10, pady=10)
tk.Label(frame_renovacao, text='LivroID:').grid(row=0, column=0)
entry_renovacao_id = tk.Entry(frame_renovacao)
entry_renovacao_id.grid(row=0, column=1)
tk.Label(frame_renovacao, text='Nova Data Devolução:').grid(row=1, column=0)
entry_nova_data_dev = tk.Entry(frame_renovacao)
entry_nova_data_dev.grid(row=1, column=1)
tk.Button(frame_renovacao, text='Renovar Empréstimo', command=renew_emprestimo).grid(row=2, columnspan=2, pady=5)

# Frame para visualizar dados
frame_visualizar = tk.LabelFrame(root, text='Visualizar Dados')
frame_visualizar.grid(row=0, column=1, rowspan=4, padx=10, pady=10)

# Lista para mostrar os autores
autores_list = tk.Listbox(frame_visualizar, height=5, width=50)
autores_list.grid(row=0, column=0)
tk.Button(frame_visualizar, text='Visualizar Autores', command=view_autores).grid(row=1, column=0)

# Lista para mostrar os livros
livros_list = tk.Listbox(frame_visualizar, height=5, width=50)
livros_list.grid(row=2, column=0)
tk.Button(frame_visualizar, text='Visualizar Livros', command=view_livros).grid(row=3, column=0)

# Lista para mostrar os empréstimos
emprestimos_list = tk.Listbox(frame_visualizar, height=5, width=50)
emprestimos_list.grid(row=4, column=0)
tk.Button(frame_visualizar, text='Visualizar Empréstimos', command=view_emprestimos).grid(row=5, column=0)

# Lista para mostrar os atrasos
atrasos_list = tk.Listbox(frame_visualizar, height=5, width=50)
atrasos_list.grid(row=6, column=0)
tk.Button(frame_visualizar, text='Visualizar Atrasos', command=view_atrasos).grid(row=7, column=0)

# Inicie a interface
root.mainloop()
